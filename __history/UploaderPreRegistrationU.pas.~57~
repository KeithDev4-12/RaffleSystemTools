unit UploaderPreRegistrationU;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ComCtrls, Vcl.Buttons,
  Vcl.ExtCtrls, DBGridEhGrouping, ToolCtrlsEh, DBGridEhToolCtrls, DynVarsEh,
  EhLibVCL, GridsEh, DBAxisGridsEh, DBGridEh, Data.DB, MemDS, VirtualTable,
  FireDAC.Comp.BatchMove.DataSet, FireDAC.Comp.BatchMove,
  FireDAC.Comp.BatchMove.Text, FireDAC.Stan.Intf, Vcl.ExtDlgs;

type
  TUUploaderPreRegistration = class(TForm)
    Panel1: TPanel;
    SpeedButton1: TSpeedButton;
    Panel2: TPanel;
    RichEdit1: TRichEdit;
    Panel3: TPanel;
    GroupBox1: TGroupBox;
    Panel4: TPanel;
    Shape1: TShape;
    GroupBox2: TGroupBox;
    Panel5: TPanel;
    Panel6: TPanel;
    Panel7: TPanel;
    SpeedButton2: TSpeedButton;
    Shape2: TShape;
    SpeedButton3: TSpeedButton;
    Shape3: TShape;
    Shape4: TShape;
    SpeedButton4: TSpeedButton;
    SpeedButton5: TSpeedButton;
    VirTab: TVirtualTable;
    DBGridEh1: TDBGridEh;
    DSVirTab: TDataSource;
    GroupBox3: TGroupBox;
    FDBatchMove1: TFDBatchMove;
    FDBatchMoveTextReader1: TFDBatchMoveTextReader;
    FDBatchMoveDataSetWriter1: TFDBatchMoveDataSetWriter;
    VirTabAccountNumber: TStringField;
    Shape5: TShape;
    Panel9: TPanel;
    Panel10: TPanel;
    DBGridEh2: TDBGridEh;
    DSCastedMemberConsumer: TDataSource;
    VirTabDel: TVirtualTable;
    VirTabDelAccountNumber: TStringField;
    OpenTextFileDialog1: TOpenTextFileDialog;
    procedure SpeedButton2Click(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
    procedure SpeedButton4Click(Sender: TObject);
    procedure FormShow(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  UUploaderPreRegistration: TUUploaderPreRegistration;
  FilteredOrNot:Integer;

implementation

{$R *.dfm}

uses MainModuleU;

procedure TUUploaderPreRegistration.FormShow(Sender: TObject);
begin
  FilteredOrNot := 0;
end;

procedure TUUploaderPreRegistration.SpeedButton1Click(Sender: TObject);
begin
  if OpenTextFileDialog1.Execute then begin
    FDBatchMoveTextReader1.FileName := OpenTextFileDialog1.FileName;
    if Length(FDBatchMoveTextReader1.FileName)<>0 then begin
      FDBatchMove1.Execute;
    end;
  end;
end;

procedure TUUploaderPreRegistration.SpeedButton2Click(Sender: TObject);
begin
  with UmainModule do begin
    VirTab.Close;
    VirTab.Open;
    VirTab.First;

    VirTabDel.Close;
    VirTabDel.Open;
    VirTabDel.First;

    tblSearchMemberConsumer.Close;
    //tblSearchMemberConsumer.ParamByName('AYear').AsInteger := CurrentYear;
    tblSearchMemberConsumer.Open();
    tblSearchMemberConsumer.Filtered := False;
    tblSearchMemberConsumer.Filter := 'Year = ' + QuotedStr(IntToStr(CurrentYear));
    tblSearchMemberConsumer.Filtered := True;
    tblSearchMemberConsumer.First;

    while not VirTab.EOF do begin
      VirTabDel.Append;
      if qryCastedMemberConsumers.Locate('AccountNumber','0'+VirTabAccountNumber.AsString,[]) then begin
        if qryCastedMemberConsumersConnectionStatus.AsString = '2' then begin
          qryCastedMemberConsumers.Edit;
          qryCastedMemberConsumersStatus.AsInteger := 3;
          qryCastedMemberConsumers.Post;
        end else if qryCastedMemberConsumersConnectionStatus.AsString = '3' then begin
          qryCastedMemberConsumers.Edit;
          qryCastedMemberConsumersStatus.AsInteger := 3;
          qryCastedMemberConsumers.Post;
        end else begin
          qryCastedMemberConsumers.Edit;
          qryCastedMemberConsumersStatus.AsInteger := 1;
          qryCastedMemberConsumers.Post;
        end;
        VirTabDelAccountNumber.AsString := VirTabAccountNumber.AsString;
        VirTabDel.Post;
      end else begin
        VirTabDel.Cancel;
      end;
      VirTab.Next;
    end;

    VirTabDel.First;
    while not VirTabDel.EOF do begin
      if VirTab.Locate('AccountNumber',VirTabDelAccountNumber.AsString,[]) then begin
        VirTab.Delete;
      end;
      VirTabDel.Next;
    end;

    VirTabDel.Clear;
  end;

  FilteredOrNot := 1;
end;

procedure TUUploaderPreRegistration.SpeedButton4Click(Sender: TObject);
begin
  if FilteredOrNot=1 then begin
    VirTab.Clear;
    FilteredOrNot := 0;
  end else begin
    MessageDlg('Cannot Process Because Data is Not posted!',mtInformation,[mbOK],0);
    FilteredOrNot := 0;
  end;
end;

end.
